function gr_print_usage() {
    cat << EOF
Usage: gr [PATH]

Change directory to current git repository root directory.
If PATH is specified, change directory to PATH instead of it.
PATH is treated relative path in git root directory.

  -h           display this help and exit
EOF
}

function gr_print_error() {
    echo "gr: $*" 1>&2
    echo "Try \`-h' option for more information." 1>&2
}

function gr() {
    local option OPTARG OPTIND
    local root_path
    local relative_path

    while getopts ':h' option; do
        case $option in
        h)
            gr_print_usage
            return 0
            ;;
        :)
            gr_print_error "option requires an argument -- $OPTARG"
            return 1
            ;;
        *)
            gr_print_error "invalid option -- $OPTARG"
            return 1
            ;;
        esac
    done
    shift $(( OPTIND - 1 ))

    if [[ $( git rev-parse --is-inside-work-tree 2> /dev/null ) != 'true' ]]; then
        gr_print_error "Not in a git repository"
        return 1
    fi

    root_path=$( git rev-parse --show-toplevel )
    relative_path="$1"

    if [ -n "$relative_path" ]; then
        cd "$root_path/$relative_path" || exit
    else
        cd "$root_path" || exit
    fi
}

gr "$@"

# vim: filetype=zsh
