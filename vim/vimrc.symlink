"
" Maintainer:  Martin Hardselius <martin.hardselius@gmail.com>
" Last change: 2019 Oct 17
"

call plug#begin()

Plug 'arcticicestudio/nord-vim'
Plug 'fatih/vim-go', { 'tag': '*', 'do': ':GoUpdateBinaries' }
Plug 'godlygeek/tabular'
Plug 'hashivim/vim-hashicorp-tools'
Plug 'morhetz/gruvbox'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-markdown'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-vinegar'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

call plug#end()

" ------------------------------------------------------------------------------
" SECTION: SETTINGS
" ------------------------------------------------------------------------------

set nocompatible

filetype plugin indent on
syntax enable

set autoindent                 " Minimal automatic indent for any filetype.
set backspace=indent,eol,start " Proper backspace behaviour.
set hidden                     " Possibility to have more than one unsaved
                               " buffers.
set incsearch                  " Shows the match while typing
set hlsearch                   " Highlight found matches

set ttyfast

set laststatus=2
set encoding=utf-8 " Set default encoding to UTF-8
set autoread       " Automatically reread changed files without asking

set number                   " Show line numbers
set showcmd                  " Show me what I'm typing
set noswapfile               " Don't use swapfile
set nobackup                 " Don't create annoying backup files
set splitright               " Split vertical windows right to the current
set splitbelow               " Split horizontal windows below to the current
set autowrite                " Automatically save before :next, :make etc.
set fileformats=unix,dos,mac " Prefer Unix over Windows over OS 9 formats
set noshowmatch              " Do not show matching brackets by flickering
set noshowmode               " We show the mode with airline or lightline
set ignorecase               " Search case insensitive ...
set smartcase                " ... but not if it begins with upper case
set completeopt=menu,menuone
set cursorline
set nocursorcolumn           " Speed up syntax highlighting
set updatetime=300
set pumheight=10             " Completion window max size
set conceallevel=2           " Concealed text is completely hidden

set shortmess+=c   " Shut off completion messages
set belloff+=ctrlg " If Vim beeps during completion

set lazyredraw

" Copy to clipboard
set clipboard^=unnamed
set clipboard^=unnamedplus

" Increase memory to show syntax highlighting for large files
set maxmempattern=20000

" ~/.viminfo needs to be writable and readable. Set oldfiles to 1000 last
" recently opened files, :FzHistory uses it
set viminfo='1000

if has('persistent_undo')
  set undofile
  set undodir=~/.cache/vim
endif

" Color
colorscheme nord

highlight clear CursorLine
highlight CursorLineNR cterm=bold
augroup aug_cursorline
  autocmd! ColorScheme * highlight clear CursorLine
  autocmd! ColorScheme * highlight CursorLineNR cterm=bold
augroup end

augroup filetypedetect
  command! -nargs=* -complete=help Help vertical belowright help <args>
  autocmd FileType help wincmd L

  autocmd BufNewFile,BufRead .tmux.conf*,tmux.conf* setfiletype tmux
  autocmd BufNewFile,BufRead .vimrc*,vimrc* setfiletype vim
  autocmd BufNewFile,BufRead *.hcl setfiletype conf

  autocmd BufNewFile,BufRead *.gotmpl set filetype=gotexttmpl

  autocmd BufNewFile,BufRead *.ino setlocal noet ts=4 sw=4
  autocmd BufNewFile,BufRead *.txt setlocal noet ts=4 sw=4
  autocmd BufNewFile,BufRead *.md setlocal noet ts=4 sw=4
  autocmd BufNewFile,BufRead *.html setlocal noet ts=4 sw=4
  autocmd BufNewFile,BufRead *.vim setlocal expandtab shiftwidth=2 tabstop=2
  autocmd BufNewFile,BufRead *.hcl setlocal expandtab shiftwidth=2 tabstop=2
  autocmd BufNewFile,BufRead *.sh setlocal expandtab shiftwidth=2 tabstop=2
  autocmd BufNewFile,BufRead *.zsh setlocal expandtab shiftwidth=2 tabstop=2
  autocmd BufNewFile,BufRead *.proto setlocal expandtab shiftwidth=2 tabstop=2

  autocmd FileType go setlocal expandtab tabstop=4 shiftwidth=4
  autocmd FileType yaml setlocal expandtab tabstop=2 shiftwidth=2
  autocmd FileType json setlocal expandtab tabstop=2 shiftwidth=2
  autocmd FileType vim setlocal expandtab tabstop=2 shiftwidth=2
  autocmd FileType sh setlocal expandtab tabstop=2 shiftwidth=2
augroup end

" ------------------------------------------------------------------------------
" SECTION: STATUSLINE
" ------------------------------------------------------------------------------


" ------------------------------------------------------------------------------
" SECTION: MAPPINGS
" ------------------------------------------------------------------------------

" First off, we need to map leader. We have mappings that depends on it. With
" a map leader it's possible to do extra key combinations.
let mapleader = ","

" Some useful quickfix shortcuts for quickfix
map <C-n> :cn<CR>
map <C-m> :cm<CR>

" Always put the quickfix window at the bottom
augroup quickfix
  autocmd!
  autocmd FileType qf wincmd J
  autocmd FileType qf setlocal wrap
augroup end

" Enter automatically into the files directory
autocmd BufEnter * silent! lcd %:p:h

" Automatically resize screens to be equally the same
autocmd VimResized * wincmd =

" Center the screen
nnoremap <space> zz

" Remove search highlight
function! s:clear_highlight()
  let @/ = ""
  cal go#guru#ClearSameIds()
endfunction
nnoremap <silent> <leader><space> :<C-u>call <SID>clear_highlight()<CR>

" Close all but the current one
nnoremap <leader>o :only<CR>

" Get off my lawn
nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Down> :echoe "Use j"<CR>

" Center on line when jumping between search results
nnoremap n nzzzv
nnoremap N Nzzzv

" ------------------------------------------------------------------------------
" SECTION: PLUGINS
" ------------------------------------------------------------------------------

" Fugitive
vnoremap <leader>gb :Gblame<CR>
nnoremap <leader>gb :Gblame<CR>

" netrw
let g:netrw_liststyle = 3

" vim-airline
let g:airline_powerline_fonts=1

" vim-go
let g:go_fmt_fail_silently = 1
let g:go_fmt_command = 'goimports'
let g:go_debug_windows = {
      \ 'vars': 'leftabove 35vnew',
      \ 'stack': 'botright 10new',
\ }

let g:go_autodetect_gopath = 1
let g:go_metalinter_autosave_enabled = ['vet', 'golint']
let g:go_metalinter_enabled = ['vet', 'golint']

let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1

" vim-hashicorp-tools
let g:terraform_align = 1
let g:terraform_fmt_on_save = 1
